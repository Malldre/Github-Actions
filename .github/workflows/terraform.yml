name: "Terraform Complete Workflow"

on:
  workflow_call:
    inputs:
      environment:
        description: "Target environment for deployment (DEV, QUAL, PROD)"
        required: true
        type: string
      terraform-version:
        description: "Terraform version to use"
        required: false
        type: string
        default: "1.8.3"
      working-directory:
        description: "Working directory for Terraform files"
        required: false
        type: string
        default: "infra"
      action:
        description: "Action to perform: plan, apply, or destroy"
        required: false
        type: string
        default: "apply"
      download-artifacts:
        description: "Download artifacts before apply"
        required: false
        type: boolean
        default: false
    secrets:
      AWS_ROLE_ARN:
        description: "AWS IAM role ARN for OIDC"
        required: true
      AWS_REGION:
        description: "AWS region"
        required: true
      TF_STATE_BUCKET:
        description: "S3 bucket for Terraform state"
        required: true
      TF_LOCK_TABLE:
        description: "DynamoDB table for state locking"
        required: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    if: inputs.action == 'plan'
    uses: Malldre/Github-Actions/.github/workflows/terraform-plan.yml@main
    with:
      environment: ${{ inputs.environment }}
      terraform-version: ${{ inputs.terraform-version }}
      working-directory: ${{ inputs.working-directory }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_LOCK_TABLE: ${{ secrets.TF_LOCK_TABLE }}

  terraform-apply:
    if: inputs.action == 'apply'
    uses: Malldre/Github-Actions/.github/workflows/terraform-apply.yml@main
    with:
      environment: ${{ inputs.environment }}
      terraform-version: ${{ inputs.terraform-version }}
      working-directory: ${{ inputs.working-directory }}
      download-artifacts: ${{ inputs.download-artifacts }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_LOCK_TABLE: ${{ secrets.TF_LOCK_TABLE }}

  terraform-destroy:
    if: inputs.action == 'destroy'
    uses: Malldre/Github-Actions/.github/workflows/terraform-destroy.yml@main
    with:
      environment: ${{ inputs.environment }}
      terraform-version: ${{ inputs.terraform-version }}
      working-directory: ${{ inputs.working-directory }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_LOCK_TABLE: ${{ secrets.TF_LOCK_TABLE }}
