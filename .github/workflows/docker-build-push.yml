name: Build and Push Docker Image

on:
    workflow_call:
        inputs:
            image-name:
                description: "Docker image name"
                required: true
                type: string
            dockerfile-path:
                description: "Path to Dockerfile"
                required: false
                type: string
                default: "./Dockerfile"
            context-path:
                description: "Build context path"
                required: false
                type: string
                default: "."
            platforms:
                description: "Target platforms (comma-separated)"
                required: false
                type: string
                default: "linux/amd64"
            push:
                description: "Push image to registry"
                required: false
                type: boolean
                default: true
            registry:
                description: "Container registry URL"
                required: false
                type: string
                default: "ghcr.io"
        secrets:
            registry-username:
                description: "Registry username"
                required: false
            registry-password:
                description: "Registry password/token"
                required: false

permissions:
    contents: read
    packages: write

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        timeout-minutes: 30

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              if: inputs.push == true
              uses: docker/login-action@v3
              with:
                  registry: ${{ inputs.registry }}
                  username: ${{ secrets.registry-username || github.actor }}
                  password: ${{ secrets.registry-password || secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image-name }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ${{ inputs.context-path }}
                  file: ${{ inputs.dockerfile-path }}
                  platforms: ${{ inputs.platforms }}
                  push: ${{ inputs.push }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build Summary
              if: always()
              run: |
                  echo "## 🐳 Docker Build Report" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Image:** ${{ inputs.image-name }}" >> $GITHUB_STEP_SUMMARY
                  echo "**Registry:** ${{ inputs.registry }}" >> $GITHUB_STEP_SUMMARY
                  echo "**Platforms:** ${{ inputs.platforms }}" >> $GITHUB_STEP_SUMMARY
                  echo "**Pushed:** ${{ inputs.push }}" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Tags" >> $GITHUB_STEP_SUMMARY
                  echo '```' >> $GITHUB_STEP_SUMMARY
                  echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
                  echo '```' >> $GITHUB_STEP_SUMMARY
